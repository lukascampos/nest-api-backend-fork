generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Roles {
  USER
  ARTISAN
  MODERATOR
  ADMIN
}

model User {
  id         String   @id @default(uuid())
  email      String   @unique
  password   String
  roles      Roles[]
  name       String
  socialName String?  @map("social_name")
  avatar     String?
  isDisabled Boolean  @default(false) @map("is_disabled")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  profile UserProfile?
  Session Session[]
}

model Session {
  id         String    @id @default(uuid())
  userId     String    @map("fk_user_id")
  isRevoked  Boolean   @default(false) @map("is_revoked")
  startedAt  DateTime  @default(now()) @map("started_at")
  expiresAt  DateTime  @map("expires_at")
  lastUsedAt DateTime? @map("last_used_at")
  ipHost     String    @map("ip_host")
  userAgent  String    @map("user_agent")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, isRevoked])
}

model UserProfile {
  id        String   @id @default(uuid())
  userId    String   @unique @map("fk_user_id")
  cpf       String?  @unique
  phone     String   @unique
  updatedAt DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
